@export buildin.particle.vertex

uniform mat4 worldView : WORLDVIEW;
uniform mat4 projection : PROJECTION;

attribute vec3 position : POSITION;
attribute vec3 normal : NORMAL;

varying float v_Age;

void main() {
    v_Age = normal.x;
    float rotation = normal.y;

    vec4 worldViewPosition = worldView * vec4(position, 1.0);
    gl_PointSize = -normal.z / worldViewPosition.z;
    gl_Position = projection * worldViewPosition;
    
}

@end

@export buildin.particle.fragment

uniform sampler2D sprite;
uniform sampler2D gradient;
uniform vec3 color : [1.0, 1.0, 1.0];
uniform float alpha : 1.0;

varying float v_Age;

void main() {
    vec4 color = vec4(color, alpha);
    #ifdef SPRITE_ENABLED
        color *= texture2D(sprite, gl_PointCoord);
    #endif
    #ifdef GRADIENT_ENABLED
        color *= texture2D(gradient, vec2(v_Age, 0.5));
    #endif

    gl_FragColor = color;
}

@end