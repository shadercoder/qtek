@export buildin.deferred.phong.vertex

uniform mat4 worldViewProjection : WORLDVIEWPROJECTION;

uniform vec2 uvRepeat : [1.0, 1.0];

attribute vec3 position : POSITION;
attribute vec2 texcoord : TEXCOORD_0;

#ifdef SKINNING
attribute vec3 boneWeight;
attribute vec4 boneIndex;

uniform mat4 boneMatrices[ BONE_MATRICES_NUMBER ];
#endif

varying vec2 v_Texcoord;
varying vec3 v_Normal;
varying vec3 v_WorldPosition;

void main(){

    vec3 skinnedPosition = position;
    #ifdef SKINNING
        mat4 skinMatrix;
        if(boneIndex.x >= 0.0){
            skinMatrix = boneMatrices[int(boneIndex.x)] * boneWeight.x;
        }
        if(boneIndex.y >= 0.0){
            skinMatrix += boneMatrices[int(boneIndex.y)] * boneWeight.y;
        }
        if(boneIndex.z >= 0.0){
            skinMatrix += boneMatrices[int(boneIndex.z)] * boneWeight.z;
        }
        if(boneIndex.w >= 0.0){
            skinMatrix += boneMatrices[int(boneIndex.w)] * (1.0-boneWeight.x-boneWeight.y-boneWeight.z);
        }
        skinnedPosition = (skinMatrix * vec4(position, 1.0)).xyz;
    #endif

    gl_Position = worldViewProjection * vec4( skinnedPosition, 1.0 );

    v_Texcoord = texcoord * uvRepeat;
}

@end

@export buildin.deferred.phong.fragment

varying vec2 v_Texcoord;

uniform sampler2D diffuseMap;
uniform sampler2D specularmap;
uniform sampler2D alphaMap;

uniform vec3 color : [1.0, 1.0, 1.0];

void main(){
    
}
@end